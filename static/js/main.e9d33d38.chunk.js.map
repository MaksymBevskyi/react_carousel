{"version":3,"sources":["components/Carousel/Carousel.tsx","constants.ts","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","firstImage","animationDuration","className","style","width","map","image","transform","transition","src","alt","DEFAULT","info","App","useState","setItemWidth","setFrameSize","step","setStep","setAnimationDuration","infinite","setInfinite","setFirstImage","htmlFor","type","name","id","max","min","defaultValue","onChange","event","target","value","disabled","onClick","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9d33d38.chunk.js","sourcesContent":["import './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  firstImage: number;\n  animationDuration: number;\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  firstImage,\n  animationDuration,\n}) => {\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: frameSize * itemWidth }}\n\n    >\n      <ul className=\"Carousel__list\">\n        {images.map(image => (\n          <li\n            className=\"Carousel__item\"\n            key={image}\n            style={{\n              transform: `translateX(${-(itemWidth * firstImage)}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={image}\n              className=\"Carousel__image\"\n              style={{ width: itemWidth }}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","type Default = {\n  WIDTH: number,\n  FRAME_SIZE: number,\n  STEP: number,\n  ANIMATION: number,\n  INFINITY: boolean,\n};\n\nexport const DEFAULT: Default = {\n  WIDTH: 130,\n  FRAME_SIZE: 3,\n  STEP: 3,\n  ANIMATION: 1000,\n  INFINITY: false,\n};\n\nexport const info = {\n  minWidth: 130,\n  maxWidth: 400,\n  widthStep: 1,\n  minFrameSize: 1,\n  maxFrameSize: 10,\n  minStep: 1,\n  maxStep: 5,\n  animationDurationStep: 50,\n  minAnimationDuration: 50,\n  maxAnimationDuration: 2000,\n};\n","import React, { useState } from 'react';\n\nimport { Carousel } from './components/Carousel';\nimport { DEFAULT, info } from './constants';\n\nimport './App.scss';\n\ntype Images = string[];\n\nconst images: Images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nexport const App: React.FC = () => {\n  const [itemWidth, setItemWidth] = useState(DEFAULT.WIDTH);\n  const [frameSize, setFrameSize] = useState(DEFAULT.FRAME_SIZE);\n  const [step, setStep] = useState(DEFAULT.STEP);\n  const [animationDuration, setAnimationDuration] = useState(DEFAULT.ANIMATION);\n  const [infinite, setInfinite] = useState(DEFAULT.INFINITY);\n  const [firstImage, setFirstImage] = useState(0);\n\n  const handlerNextClick = () => {\n    if (infinite && firstImage === images.length - frameSize) {\n      return setFirstImage(0);\n    }\n\n    return setFirstImage((value) => (\n      (value + step) <= (images.length - frameSize)\n        ? value + step\n        : images.length - frameSize\n    ));\n  };\n\n  const handlerPrevClick = () => {\n    if (infinite && firstImage === 0) {\n      return setFirstImage(images.length - frameSize);\n    }\n\n    return setFirstImage((value) => (\n      value - step >= 0\n        ? value - step\n        : 0\n    ));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\" data-cy=\"title\">Carousel</h1>\n\n      <div className=\"container\">\n        <label htmlFor=\"itemWidth\" className=\"label\">\n          <input\n            type=\"number\"\n            name=\"itemWidth\"\n            id=\"itemWidth\"\n            className=\"input\"\n            max={info.maxWidth}\n            min={info.minWidth}\n            step={info.widthStep}\n            defaultValue={DEFAULT.WIDTH}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setItemWidth(+event.target.value);\n            }}\n          />\n          Item Width\n        </label>\n        <label htmlFor=\"frameSize\" className=\"label\">\n          <input\n            type=\"number\"\n            name=\"frameSize\"\n            id=\"frameSize\"\n            className=\"input\"\n            defaultValue={DEFAULT.FRAME_SIZE}\n            min={info.minFrameSize}\n            max={info.maxFrameSize}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setFrameSize(+event.target.value);\n            }}\n          />\n          Frame Size\n        </label>\n        <label htmlFor=\"step\" className=\"label\">\n          <input\n            type=\"number\"\n            name=\"step\"\n            id=\"step\"\n            className=\"input\"\n            defaultValue={DEFAULT.STEP}\n            max={info.maxStep}\n            min={info.minStep}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setStep(+event.target.value);\n            }}\n          />\n          Step\n        </label>\n        <label htmlFor=\"animationDuration\" className=\"label\">\n          <input\n            type=\"number\"\n            name=\"animationDuration\"\n            id=\"animationDuration\"\n            className=\"input\"\n            defaultValue={DEFAULT.ANIMATION}\n            step={info.animationDurationStep}\n            max={info.maxAnimationDuration}\n            min={info.minAnimationDuration}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n              setAnimationDuration(+event.target.value);\n            }}\n          />\n          Animation Duration\n        </label>\n        <label htmlFor=\"infinite\" className=\"label\">\n          <input\n            type=\"checkbox\"\n            className=\" input input--checkbox\"\n            onChange={() => {\n              setInfinite(!infinite);\n            }}\n          />\n          Infinitie\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        itemWidth={itemWidth}\n        frameSize={frameSize}\n        firstImage={firstImage}\n        animationDuration={animationDuration}\n      />\n\n      <div className=\"container\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          disabled={firstImage === 0 && !infinite}\n          onClick={handlerPrevClick}\n        >\n          Prev\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          data-cy=\"next\"\n          disabled={firstImage === images.length - frameSize && !infinite}\n          onClick={handlerNextClick}\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}